{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/GrapesJSEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounterEditor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: {\n          autoload: false\n        } // Disable auto-loading of blocks\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: {\n          class: 'fa fa-clock-o'\n        },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        customData: {\n          start: 0,\n          end: 100,\n          direction: 'up',\n          speed: 1000\n        },\n        render: ({\n          el\n        }) => {\n          let count = el.dataset.start;\n          const end = el.dataset.end;\n          const direction = el.dataset.direction;\n          const speed = el.dataset.speed;\n          const interval = setInterval(() => {\n            if (direction === 'up' && count < end || direction === 'down' && count > end) {\n              el.innerText = count;\n              count = direction === 'up' ? parseInt(count) + 1 : parseInt(count) - 1;\n            } else {\n              clearInterval(interval);\n            }\n          }, speed);\n        }\n      });\n\n      // Add customization options to the panel\n      editor.Panels.addPanel({\n        id: 'number-counter-panel',\n        visible: true,\n        buttons: [{\n          id: 'set-start-end',\n          label: 'Set Start and End',\n          command: 'set-start-end',\n          context: 'number-counter'\n        }, {\n          id: 'set-direction',\n          label: 'Set Direction',\n          command: 'set-direction',\n          context: 'number-counter'\n        }, {\n          id: 'set-speed',\n          label: 'Set Speed (ms)',\n          command: 'set-speed',\n          context: 'number-counter'\n        }]\n      });\n\n      // Add commands for customization\n      editor.Commands.add('set-start-end', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const start = prompt('Enter Start Number:', selected.get('customData').start.toString());\n            const end = prompt('Enter End Number:', selected.get('customData').end.toString());\n            if (start !== null && end !== null) {\n              selected.set('customData', {\n                ...selected.get('customData'),\n                start: parseInt(start),\n                end: parseInt(end)\n              });\n              editor.Modal.close();\n            }\n          }\n        }\n      });\n      editor.Commands.add('set-direction', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const direction = prompt('Enter Direction (up or down):', selected.get('customData').direction);\n            if (direction !== null && (direction === 'up' || direction === 'down')) {\n              selected.set('customData', {\n                ...selected.get('customData'),\n                direction\n              });\n              editor.Modal.close();\n            }\n          }\n        }\n      });\n      editor.Commands.add('set-speed', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const speed = prompt('Enter Speed (milliseconds):', selected.get('customData').speed.toString());\n            if (speed !== null) {\n              selected.set('customData', {\n                ...selected.get('customData'),\n                speed: parseInt(speed)\n              });\n              editor.Modal.close();\n            }\n          }\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounterEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounterEditor;\nexport default NumberCounterEditor;\nvar _c;\n$RefreshReg$(_c, \"NumberCounterEditor\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounterEditor","_s","editorRef","current","editor","init","container","storageManager","autoload","Blocks","add","label","attributes","class","content","category","customData","start","end","direction","speed","render","el","count","dataset","interval","setInterval","innerText","parseInt","clearInterval","Panels","addPanel","id","visible","buttons","command","context","Commands","run","sender","selected","getSelected","prompt","get","toString","set","Modal","close","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/GrapesJSEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\n\nconst NumberCounterEditor = () => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: { autoload: false }, // Disable auto-loading of blocks\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: { class: 'fa fa-clock-o' },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        customData: {\n          start: 0,\n          end: 100,\n          direction: 'up',\n          speed: 1000,\n        },\n        render: ({ el }) => {\n          let count = el.dataset.start;\n          const end = el.dataset.end;\n          const direction = el.dataset.direction;\n          const speed = el.dataset.speed;\n          const interval = setInterval(() => {\n            if ((direction === 'up' && count < end) || (direction === 'down' && count > end)) {\n              el.innerText = count;\n              count = direction === 'up' ? parseInt(count) + 1 : parseInt(count) - 1;\n            } else {\n              clearInterval(interval);\n            }\n          }, speed);\n        },\n      });\n\n      // Add customization options to the panel\n      editor.Panels.addPanel({\n        id: 'number-counter-panel',\n        visible: true,\n        buttons: [\n          {\n            id: 'set-start-end',\n            label: 'Set Start and End',\n            command: 'set-start-end',\n            context: 'number-counter',\n          },\n          {\n            id: 'set-direction',\n            label: 'Set Direction',\n            command: 'set-direction',\n            context: 'number-counter',\n          },\n          {\n            id: 'set-speed',\n            label: 'Set Speed (ms)',\n            command: 'set-speed',\n            context: 'number-counter',\n          },\n        ],\n      });\n\n      // Add commands for customization\n      editor.Commands.add('set-start-end', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const start = prompt('Enter Start Number:', selected.get('customData').start.toString());\n            const end = prompt('Enter End Number:', selected.get('customData').end.toString());\n            if (start !== null && end !== null) {\n              selected.set('customData', {\n                ...selected.get('customData'),\n                start: parseInt(start),\n                end: parseInt(end),\n              });\n              editor.Modal.close();\n            }\n          }\n        },\n      });\n\n      editor.Commands.add('set-direction', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const direction = prompt('Enter Direction (up or down):', selected.get('customData').direction);\n            if (direction !== null && (direction === 'up' || direction === 'down')) {\n              selected.set('customData', {\n                ...selected.get('customData'),\n                direction,\n              });\n              editor.Modal.close();\n            }\n          }\n        },\n      });\n\n      editor.Commands.add('set-speed', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const speed = prompt('Enter Speed (milliseconds):', selected.get('customData').speed.toString());\n            if (speed !== null) {\n              selected.set('customData', {\n                ...selected.get('customData'),\n                speed: parseInt(speed),\n              });\n              editor.Modal.close();\n            }\n          }\n        },\n      });\n    }\n  }, []);\n\n  return <div ref={editorRef} />;\n};\n\nexport default NumberCounterEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}