{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/GrapesJSEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport grapesjs from 'grapesjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounterEditor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: {\n          autoload: false\n        }\n      });\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: {\n          class: 'fa fa-clock-o'\n        },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        // Define traits for component settings\n        traits: [{\n          type: 'number',\n          name: 'start',\n          label: 'Start Number',\n          value: 0\n        }, {\n          type: 'number',\n          name: 'end',\n          label: 'End Number',\n          value: 100\n        }, {\n          type: 'select',\n          name: 'direction',\n          label: 'Direction',\n          options: [{\n            value: 'up',\n            name: 'Up'\n          }, {\n            value: 'down',\n            name: 'Down'\n          }],\n          value: 'up'\n        }, {\n          type: 'number',\n          name: 'speed',\n          label: 'Counting Speed (milliseconds)',\n          value: 1000\n        }],\n        // Define render logic for the block\n        render: ({\n          el,\n          model\n        }) => {\n          // Extract trait values from the block model\n          const start = model.get('traits').start;\n          const end = model.get('traits').end;\n          const direction = model.get('traits').direction;\n          const speed = model.get('traits').speed;\n\n          // Initialize and run the number counter with extracted traits\n          let count = start;\n          const interval = setInterval(() => {\n            var _count$toString;\n            if (direction === 'up' && count < end) {\n              count++;\n            } else if (direction === 'down' && count > end) {\n              count--;\n            } else {\n              clearInterval(interval);\n            }\n            el.innerHTML = (_count$toString = count.toString()) !== null && _count$toString !== void 0 ? _count$toString : 0;\n          }, speed);\n        }\n      });\n      editor.BlockManager.add('number-counter', {\n        label: 'Number Counter',\n        content: ''\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounterEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounterEditor;\nexport default NumberCounterEditor;\nvar _c;\n$RefreshReg$(_c, \"NumberCounterEditor\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounterEditor","_s","editorRef","current","editor","init","container","storageManager","autoload","Blocks","add","label","attributes","class","content","category","traits","type","name","value","options","render","el","model","start","get","end","direction","speed","count","interval","setInterval","_count$toString","clearInterval","innerHTML","toString","BlockManager","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/GrapesJSEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport grapesjs from 'grapesjs';\n\nconst NumberCounterEditor = () => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: { autoload: false },\n      });\n\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: { class: 'fa fa-clock-o' },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        // Define traits for component settings\n        traits: [\n          {\n            type: 'number',\n            name: 'start',\n            label: 'Start Number',\n            value: 0,\n          },\n          {\n            type: 'number',\n            name: 'end',\n            label: 'End Number',\n            value: 100,\n          },\n          {\n            type: 'select',\n            name: 'direction',\n            label: 'Direction',\n            options: [\n              { value: 'up', name: 'Up' },\n              { value: 'down', name: 'Down' },\n            ],\n            value: 'up',\n          },\n          {\n            type: 'number',\n            name: 'speed',\n            label: 'Counting Speed (milliseconds)',\n            value: 1000,\n          },\n        ],\n        // Define render logic for the block\n        render: ({ el, model }) => {\n          // Extract trait values from the block model\n          const start = model.get('traits').start;\n          const end = model.get('traits').end;\n          const direction = model.get('traits').direction;\n          const speed = model.get('traits').speed;\n      \n          // Initialize and run the number counter with extracted traits\n          let count = start;\n          const interval = setInterval(() => {\n            if (direction === 'up' && count < end) {\n              count++;\n            } else if (direction === 'down' && count > end) {\n              count--;\n            } else {\n              clearInterval(interval);\n            }\n            el.innerHTML = count.toString()??0;\n          }, speed);\n        },\n      });\n      \n      \n      \n\n      editor.BlockManager.add('number-counter', {\n        label: 'Number Counter',\n        content: '',\n      });\n    }\n  }, []);\n\n  return <div ref={editorRef} />;\n};\n\nexport default NumberCounterEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}