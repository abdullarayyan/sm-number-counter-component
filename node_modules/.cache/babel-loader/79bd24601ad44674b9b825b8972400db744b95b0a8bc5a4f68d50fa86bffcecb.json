{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/NumberCounterBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n// GrapesJSEditor.js\n// import React, { useEffect } from 'react';\n// import grapesjs from 'grapesjs';\n// import 'grapesjs-blocks-basic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrapesJSEditor = () => {\n  _s();\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      fromElement: true,\n      storageManager: {\n        type: 'local'\n      },\n      plugins: ['gjs-blocks-basic']\n    });\n\n    // Define the NumberCounter component\n    editor.DomComponents.addType('number-counter', {\n      model: {\n        defaults: {\n          tagName: 'div',\n          attributes: {\n            class: 'number-counter'\n          }\n        }\n      },\n      init() {\n        this.addAttributes({\n          start: {\n            type: 'number',\n            default: 0\n          },\n          end: {\n            type: 'number',\n            default: 100\n          },\n          speed: {\n            type: 'number',\n            default: 1000\n          },\n          direction: {\n            type: 'select',\n            options: ['up', 'down'],\n            default: 'up'\n          }\n        });\n        this.updateContent();\n      },\n      updateContent() {\n        const {\n          start,\n          end,\n          speed,\n          direction\n        } = this.getAttributes();\n        // Your logic to update the content based on start, end, speed, and direction\n      }\n    });\n\n    // Add a block for the NumberCounter component\n    editor.BlockManager.add('number-counter-block', {\n      label: 'NumberCounter',\n      attributes: {\n        class: 'fa fa-clock-o'\n      },\n      content: '<div data-gjs-type=\"number-counter\" data-gjs-draggable=\"true\">0</div>'\n    });\n\n    // Add an asset to the Asset Manager for the NumberCounter component\n    editor.AssetManager.add('number-counter-asset', {\n      label: 'NumberCounter',\n      content: '<div data-gjs-type=\"number-counter\" data-gjs-draggable=\"true\">0</div>',\n      category: 'Components',\n      attributes: {\n        start: 0,\n        end: 100,\n        speed: 1000,\n        direction: 'up'\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gjs\",\n      style: {\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(GrapesJSEditor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GrapesJSEditor;\nexport default GrapesJSEditor;\n\n// const GrapesJSEditor: React.FC = () => {\n//   useEffect(() => {\n//     const editor = grapesjs.init({\n//       container: '#gjs',\n//       fromElement: true,\n//       storageManager: {\n//         autosave: true,\n//         type: 'local',\n//         stepsBeforeSave: 1,\n//       },\n//       plugins: ['gjs-blocks-basic'], // Example: Basic Blocks plugin\n//       blockManager: {\n//         appendTo: '#blocks',\n//         blocks: [\n//           {\n//             id: 'number-counter',\n//             label: 'NumberCounter',\n//             attributes: { class: 'fa fa-clock-o' },\n//             content: '<div data-gjs-type=\"number-counter\">0</div>',\n//           },\n//         ],\n//       },\n//     });\n\n//     // Define the NumberCounter component and its logic\n//     editor.DomComponents.addType('number-counter', {\n//       model: {\n//         defaults: {\n//           tagName: 'div',\n//           content: '0',\n//           attributes: { class: 'number-counter' },\n//           start: 0,\n//           end: 100,\n//           speed: 1000,\n//           direction: 'up',\n//         },\n//       },\n//       init() {\n//         this.updateContent();\n//       },\n//       updated(prop, value) {\n//         if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n//           this.updateContent();\n//         }\n//       },\n//       updateContent() {\n//         const { start, end, speed, direction } = this.get('attributes');\n//         this.set('content', String(start));\n\n//         let current = start;\n//         const increment = direction === 'up' ? 1 : -1;\n//         const interval = speed / Math.abs(end - start);\n\n//         const update = () => {\n//           current += increment;\n//           this.set('content', String(current));\n//           if ((direction === 'up' && current <= end) || (direction === 'down' && current >= end)) {\n//             setTimeout(update, interval);\n//           }\n//         };\n\n//         setTimeout(update, interval);\n//       },\n//     });\n\n//     // Add a trait for customizing the NumberCounter\n//     editor.TraitManager.addType('number-counter-options', {\n//       noValue: true,\n//       createInput: function (el) {\n//         const input = document.createElement('input');\n//         input.setAttribute('placeholder', 'Enter a value');\n//         input.value = el.innerHTML;\n//         return input;\n//       },\n//       onUpdate: function (el, value) {\n//         el.innerHTML = value;\n//       },\n//     });\n\n//     // Set traits for the NumberCounter component\n//     editor.on('component:selected', (component) => {\n//       if (component.is('number-counter')) {\n//         editor.TraitManager.addType('start', {\n//           type: 'number-counter-options',\n//           name: 'Start Value',\n//         });\n//         editor.TraitManager.addType('end', {\n//           type: 'number-counter-options',\n//           name: 'End Value',\n//         });\n//         editor.TraitManager.addType('speed', {\n//           type: 'number-counter-options',\n//           name: 'Speed',\n//         });\n//         editor.TraitManager.addType('direction', {\n//           type: 'number-counter-options',\n//           name: 'Direction',\n//         });\n//       }\n//     });\n\n//     // Add a blank canvas for users to start working on\n//     editor.setComponents('<div data-gjs-type=\"number-counter\">0</div>');\n//   }, []);\n\n//   return (\n//     <div>\n//       <div id=\"gjs\" style={{ height: '500px' }}></div>\n//       <div id=\"blocks\" style={{ display: 'none' }}></div>\n//     </div>\n//   );\n// };\n\n// export default GrapesJSEditor;\nvar _c;\n$RefreshReg$(_c, \"GrapesJSEditor\");","map":{"version":3,"names":["React","useEffect","grapesjs","jsxDEV","_jsxDEV","GrapesJSEditor","_s","editor","init","container","fromElement","storageManager","type","plugins","DomComponents","addType","model","defaults","tagName","attributes","class","addAttributes","start","default","end","speed","direction","options","updateContent","getAttributes","BlockManager","add","label","content","AssetManager","category","children","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/NumberCounterBlock.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n// GrapesJSEditor.js\n// import React, { useEffect } from 'react';\n// import grapesjs from 'grapesjs';\n// import 'grapesjs-blocks-basic';\n\nconst GrapesJSEditor = () => {\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      fromElement: true,\n      storageManager: {\n        type: 'local',\n      },\n      plugins: ['gjs-blocks-basic'],\n    });\n\n    // Define the NumberCounter component\n    editor.DomComponents.addType('number-counter', {\n      model: {\n        defaults: {\n          tagName: 'div',\n          attributes: { class: 'number-counter' },\n        },\n      },\n      init() {\n        this.addAttributes({\n          start: { type: 'number', default: 0 },\n          end: { type: 'number', default: 100 },\n          speed: { type: 'number', default: 1000 },\n          direction: { type: 'select', options: ['up', 'down'], default: 'up' },\n        });\n        this.updateContent();\n      },\n      updateContent() {\n        const { start, end, speed, direction } = this.getAttributes();\n        // Your logic to update the content based on start, end, speed, and direction\n      },\n    });\n\n    // Add a block for the NumberCounter component\n    editor.BlockManager.add('number-counter-block', {\n      label: 'NumberCounter',\n      attributes: { class: 'fa fa-clock-o' },\n      content: '<div data-gjs-type=\"number-counter\" data-gjs-draggable=\"true\">0</div>',\n    });\n\n    // Add an asset to the Asset Manager for the NumberCounter component\n    editor.AssetManager.add('number-counter-asset', {\n      label: 'NumberCounter',\n      content: '<div data-gjs-type=\"number-counter\" data-gjs-draggable=\"true\">0</div>',\n      category: 'Components',\n      attributes: {\n        start: 0,\n        end: 100,\n        speed: 1000,\n        direction: 'up',\n      },\n    });\n  }, []);\n\n  return (\n    <div>\n      <div id=\"gjs\" style={{ height: '500px' }}></div>\n    </div>\n  );\n};\n\nexport default GrapesJSEditor;\n\n\n// const GrapesJSEditor: React.FC = () => {\n//   useEffect(() => {\n//     const editor = grapesjs.init({\n//       container: '#gjs',\n//       fromElement: true,\n//       storageManager: {\n//         autosave: true,\n//         type: 'local',\n//         stepsBeforeSave: 1,\n//       },\n//       plugins: ['gjs-blocks-basic'], // Example: Basic Blocks plugin\n//       blockManager: {\n//         appendTo: '#blocks',\n//         blocks: [\n//           {\n//             id: 'number-counter',\n//             label: 'NumberCounter',\n//             attributes: { class: 'fa fa-clock-o' },\n//             content: '<div data-gjs-type=\"number-counter\">0</div>',\n//           },\n//         ],\n//       },\n//     });\n\n//     // Define the NumberCounter component and its logic\n//     editor.DomComponents.addType('number-counter', {\n//       model: {\n//         defaults: {\n//           tagName: 'div',\n//           content: '0',\n//           attributes: { class: 'number-counter' },\n//           start: 0,\n//           end: 100,\n//           speed: 1000,\n//           direction: 'up',\n//         },\n//       },\n//       init() {\n//         this.updateContent();\n//       },\n//       updated(prop, value) {\n//         if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n//           this.updateContent();\n//         }\n//       },\n//       updateContent() {\n//         const { start, end, speed, direction } = this.get('attributes');\n//         this.set('content', String(start));\n\n//         let current = start;\n//         const increment = direction === 'up' ? 1 : -1;\n//         const interval = speed / Math.abs(end - start);\n\n//         const update = () => {\n//           current += increment;\n//           this.set('content', String(current));\n//           if ((direction === 'up' && current <= end) || (direction === 'down' && current >= end)) {\n//             setTimeout(update, interval);\n//           }\n//         };\n\n//         setTimeout(update, interval);\n//       },\n//     });\n\n//     // Add a trait for customizing the NumberCounter\n//     editor.TraitManager.addType('number-counter-options', {\n//       noValue: true,\n//       createInput: function (el) {\n//         const input = document.createElement('input');\n//         input.setAttribute('placeholder', 'Enter a value');\n//         input.value = el.innerHTML;\n//         return input;\n//       },\n//       onUpdate: function (el, value) {\n//         el.innerHTML = value;\n//       },\n//     });\n\n//     // Set traits for the NumberCounter component\n//     editor.on('component:selected', (component) => {\n//       if (component.is('number-counter')) {\n//         editor.TraitManager.addType('start', {\n//           type: 'number-counter-options',\n//           name: 'Start Value',\n//         });\n//         editor.TraitManager.addType('end', {\n//           type: 'number-counter-options',\n//           name: 'End Value',\n//         });\n//         editor.TraitManager.addType('speed', {\n//           type: 'number-counter-options',\n//           name: 'Speed',\n//         });\n//         editor.TraitManager.addType('direction', {\n//           type: 'number-counter-options',\n//           name: 'Direction',\n//         });\n//       }\n//     });\n\n//     // Add a blank canvas for users to start working on\n//     editor.setComponents('<div data-gjs-type=\"number-counter\">0</div>');\n//   }, []);\n\n//   return (\n//     <div>\n//       <div id=\"gjs\" style={{ height: '500px' }}></div>\n//       <div id=\"blocks\" style={{ display: 'none' }}></div>\n//     </div>\n//   );\n// };\n\n// export default GrapesJSEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,kCAAkC;AACzC;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3BL,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGL,QAAQ,CAACM,IAAI,CAAC;MAC3BC,SAAS,EAAE,MAAM;MACjBC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE;QACdC,IAAI,EAAE;MACR,CAAC;MACDC,OAAO,EAAE,CAAC,kBAAkB;IAC9B,CAAC,CAAC;;IAEF;IACAN,MAAM,CAACO,aAAa,CAACC,OAAO,CAAC,gBAAgB,EAAE;MAC7CC,KAAK,EAAE;QACLC,QAAQ,EAAE;UACRC,OAAO,EAAE,KAAK;UACdC,UAAU,EAAE;YAAEC,KAAK,EAAE;UAAiB;QACxC;MACF,CAAC;MACDZ,IAAIA,CAAA,EAAG;QACL,IAAI,CAACa,aAAa,CAAC;UACjBC,KAAK,EAAE;YAAEV,IAAI,EAAE,QAAQ;YAAEW,OAAO,EAAE;UAAE,CAAC;UACrCC,GAAG,EAAE;YAAEZ,IAAI,EAAE,QAAQ;YAAEW,OAAO,EAAE;UAAI,CAAC;UACrCE,KAAK,EAAE;YAAEb,IAAI,EAAE,QAAQ;YAAEW,OAAO,EAAE;UAAK,CAAC;UACxCG,SAAS,EAAE;YAAEd,IAAI,EAAE,QAAQ;YAAEe,OAAO,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC;YAAEJ,OAAO,EAAE;UAAK;QACtE,CAAC,CAAC;QACF,IAAI,CAACK,aAAa,CAAC,CAAC;MACtB,CAAC;MACDA,aAAaA,CAAA,EAAG;QACd,MAAM;UAAEN,KAAK;UAAEE,GAAG;UAAEC,KAAK;UAAEC;QAAU,CAAC,GAAG,IAAI,CAACG,aAAa,CAAC,CAAC;QAC7D;MACF;IACF,CAAC,CAAC;;IAEF;IACAtB,MAAM,CAACuB,YAAY,CAACC,GAAG,CAAC,sBAAsB,EAAE;MAC9CC,KAAK,EAAE,eAAe;MACtBb,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAgB,CAAC;MACtCa,OAAO,EAAE;IACX,CAAC,CAAC;;IAEF;IACA1B,MAAM,CAAC2B,YAAY,CAACH,GAAG,CAAC,sBAAsB,EAAE;MAC9CC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAE,uEAAuE;MAChFE,QAAQ,EAAE,YAAY;MACtBhB,UAAU,EAAE;QACVG,KAAK,EAAE,CAAC;QACRE,GAAG,EAAE,GAAG;QACRC,KAAK,EAAE,IAAI;QACXC,SAAS,EAAE;MACb;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAAgC,QAAA,eACEhC,OAAA;MAAKiC,EAAE,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACrC,EAAA,CA5DID,cAAc;AAAAuC,EAAA,GAAdvC,cAAc;AA8DpB,eAAeA,cAAcuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}