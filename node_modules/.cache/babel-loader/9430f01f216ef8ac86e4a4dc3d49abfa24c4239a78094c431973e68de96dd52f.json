{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/GrapesJSEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounterEditor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: {\n          autoload: false\n        } // Disable auto-loading of blocks\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: {\n          class: 'fa fa-clock-o'\n        },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        // Component settings\n        components: [{\n          tagName: 'div',\n          name: 'number-counter',\n          script: function () {\n            this.addAttributes({\n              'data-start': this.get('start'),\n              'data-end': this.get('end'),\n              'data-direction': this.get('direction'),\n              'data-speed': this.get('speed')\n            });\n          }\n        }]\n      });\n\n      // Add customization options to the panel\n      editor.Panels.addPanel({\n        id: 'number-counter-panel',\n        visible: true,\n        buttons: [{\n          id: 'set-start-end',\n          label: 'Set Start and End',\n          command: 'set-start-end',\n          context: 'number-counter'\n        }, {\n          id: 'set-direction',\n          label: 'Set Direction',\n          command: 'set-direction',\n          context: 'number-counter'\n        }, {\n          id: 'set-speed',\n          label: 'Set Speed (ms)',\n          command: 'set-speed',\n          context: 'number-counter'\n        }]\n      });\n\n      // Add commands for customization\n      editor.Commands.add('set-start-end', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const start = prompt('Enter Start Number:', selected.get('components')[0].get('start'));\n            const end = prompt('Enter End Number:', selected.get('components')[0].get('end'));\n            if (start !== null && end !== null) {\n              selected.get('components')[0].set('start', start);\n              selected.get('components')[0].set('end', end);\n              editor.Modal.close();\n            }\n          }\n        }\n      });\n      editor.Commands.add('set-direction', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const direction = prompt('Enter Direction (up or down):', selected.get('components')[0].get('direction'));\n            if (direction !== null && (direction === 'up' || direction === 'down')) {\n              selected.get('components')[0].set('direction', direction);\n              editor.Modal.close();\n            }\n          }\n        }\n      });\n      editor.Commands.add('set-speed', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const speed = prompt('Enter Speed (milliseconds):', selected.get('components')[0].get('speed'));\n            if (speed !== null) {\n              selected.get('components')[0].set('speed', speed);\n              editor.Modal.close();\n            }\n          }\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounterEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounterEditor;\nexport default NumberCounterEditor;\nvar _c;\n$RefreshReg$(_c, \"NumberCounterEditor\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounterEditor","_s","editorRef","current","editor","init","container","storageManager","autoload","Blocks","add","label","attributes","class","content","category","components","tagName","name","script","addAttributes","get","Panels","addPanel","id","visible","buttons","command","context","Commands","run","sender","selected","getSelected","start","prompt","end","set","Modal","close","direction","speed","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/GrapesJSEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n\nconst NumberCounterEditor = () => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: { autoload: false }, // Disable auto-loading of blocks\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: { class: 'fa fa-clock-o' },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        // Component settings\n        components: [\n          {\n            tagName: 'div',\n            name: 'number-counter',\n            script: function () {\n              this.addAttributes({\n                'data-start': this.get('start'),\n                'data-end': this.get('end'),\n                'data-direction': this.get('direction'),\n                'data-speed': this.get('speed'),\n              });\n            },\n          },\n        ],\n      });\n\n      // Add customization options to the panel\n      editor.Panels.addPanel({\n        id: 'number-counter-panel',\n        visible: true,\n        buttons: [\n          {\n            id: 'set-start-end',\n            label: 'Set Start and End',\n            command: 'set-start-end',\n            context: 'number-counter',\n          },\n          {\n            id: 'set-direction',\n            label: 'Set Direction',\n            command: 'set-direction',\n            context: 'number-counter',\n          },\n          {\n            id: 'set-speed',\n            label: 'Set Speed (ms)',\n            command: 'set-speed',\n            context: 'number-counter',\n          },\n        ],\n      });\n\n      // Add commands for customization\n      editor.Commands.add('set-start-end', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const start = prompt('Enter Start Number:', selected.get('components')[0].get('start'));\n            const end = prompt('Enter End Number:', selected.get('components')[0].get('end'));\n            if (start !== null && end !== null) {\n              selected.get('components')[0].set('start', start);\n              selected.get('components')[0].set('end', end);\n              editor.Modal.close();\n            }\n          }\n        },\n      });\n\n      editor.Commands.add('set-direction', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const direction = prompt('Enter Direction (up or down):', selected.get('components')[0].get('direction'));\n            if (direction !== null && (direction === 'up' || direction === 'down')) {\n              selected.get('components')[0].set('direction', direction);\n              editor.Modal.close();\n            }\n          }\n        },\n      });\n\n      editor.Commands.add('set-speed', {\n        run: (editor, sender) => {\n          const selected = editor.getSelected();\n          if (selected) {\n            const speed = prompt('Enter Speed (milliseconds):', selected.get('components')[0].get('speed'));\n            if (speed !== null) {\n              selected.get('components')[0].set('speed', speed);\n              editor.Modal.close();\n            }\n          }\n        },\n      });\n    }\n  }, []);\n\n  return <div ref={editorRef} />;\n};\n\nexport default NumberCounterEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAI,CAAC;QAC3BC,SAAS,EAAEJ,SAAS,CAACC,OAAO;QAC5BI,cAAc,EAAE;UAAEC,QAAQ,EAAE;QAAM,CAAC,CAAE;MACvC,CAAC,CAAC;;MAEF;MACAJ,MAAM,CAACK,MAAM,CAACC,GAAG,CAAC,gBAAgB,EAAE;QAClCC,KAAK,EAAE,gBAAgB;QACvBC,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAgB,CAAC;QACtCC,OAAO,EAAE,qCAAqC;QAC9CC,QAAQ,EAAE,OAAO;QACjB;QACAC,UAAU,EAAE,CACV;UACEC,OAAO,EAAE,KAAK;UACdC,IAAI,EAAE,gBAAgB;UACtBC,MAAM,EAAE,SAAAA,CAAA,EAAY;YAClB,IAAI,CAACC,aAAa,CAAC;cACjB,YAAY,EAAE,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC;cAC/B,UAAU,EAAE,IAAI,CAACA,GAAG,CAAC,KAAK,CAAC;cAC3B,gBAAgB,EAAE,IAAI,CAACA,GAAG,CAAC,WAAW,CAAC;cACvC,YAAY,EAAE,IAAI,CAACA,GAAG,CAAC,OAAO;YAChC,CAAC,CAAC;UACJ;QACF,CAAC;MAEL,CAAC,CAAC;;MAEF;MACAjB,MAAM,CAACkB,MAAM,CAACC,QAAQ,CAAC;QACrBC,EAAE,EAAE,sBAAsB;QAC1BC,OAAO,EAAE,IAAI;QACbC,OAAO,EAAE,CACP;UACEF,EAAE,EAAE,eAAe;UACnBb,KAAK,EAAE,mBAAmB;UAC1BgB,OAAO,EAAE,eAAe;UACxBC,OAAO,EAAE;QACX,CAAC,EACD;UACEJ,EAAE,EAAE,eAAe;UACnBb,KAAK,EAAE,eAAe;UACtBgB,OAAO,EAAE,eAAe;UACxBC,OAAO,EAAE;QACX,CAAC,EACD;UACEJ,EAAE,EAAE,WAAW;UACfb,KAAK,EAAE,gBAAgB;UACvBgB,OAAO,EAAE,WAAW;UACpBC,OAAO,EAAE;QACX,CAAC;MAEL,CAAC,CAAC;;MAEF;MACAxB,MAAM,CAACyB,QAAQ,CAACnB,GAAG,CAAC,eAAe,EAAE;QACnCoB,GAAG,EAAEA,CAAC1B,MAAM,EAAE2B,MAAM,KAAK;UACvB,MAAMC,QAAQ,GAAG5B,MAAM,CAAC6B,WAAW,CAAC,CAAC;UACrC,IAAID,QAAQ,EAAE;YACZ,MAAME,KAAK,GAAGC,MAAM,CAAC,qBAAqB,EAAEH,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,OAAO,CAAC,CAAC;YACvF,MAAMe,GAAG,GAAGD,MAAM,CAAC,mBAAmB,EAAEH,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,KAAK,CAAC,CAAC;YACjF,IAAIa,KAAK,KAAK,IAAI,IAAIE,GAAG,KAAK,IAAI,EAAE;cAClCJ,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACgB,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC;cACjDF,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACgB,GAAG,CAAC,KAAK,EAAED,GAAG,CAAC;cAC7ChC,MAAM,CAACkC,KAAK,CAACC,KAAK,CAAC,CAAC;YACtB;UACF;QACF;MACF,CAAC,CAAC;MAEFnC,MAAM,CAACyB,QAAQ,CAACnB,GAAG,CAAC,eAAe,EAAE;QACnCoB,GAAG,EAAEA,CAAC1B,MAAM,EAAE2B,MAAM,KAAK;UACvB,MAAMC,QAAQ,GAAG5B,MAAM,CAAC6B,WAAW,CAAC,CAAC;UACrC,IAAID,QAAQ,EAAE;YACZ,MAAMQ,SAAS,GAAGL,MAAM,CAAC,+BAA+B,EAAEH,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,WAAW,CAAC,CAAC;YACzG,IAAImB,SAAS,KAAK,IAAI,KAAKA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,MAAM,CAAC,EAAE;cACtER,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACgB,GAAG,CAAC,WAAW,EAAEG,SAAS,CAAC;cACzDpC,MAAM,CAACkC,KAAK,CAACC,KAAK,CAAC,CAAC;YACtB;UACF;QACF;MACF,CAAC,CAAC;MAEFnC,MAAM,CAACyB,QAAQ,CAACnB,GAAG,CAAC,WAAW,EAAE;QAC/BoB,GAAG,EAAEA,CAAC1B,MAAM,EAAE2B,MAAM,KAAK;UACvB,MAAMC,QAAQ,GAAG5B,MAAM,CAAC6B,WAAW,CAAC,CAAC;UACrC,IAAID,QAAQ,EAAE;YACZ,MAAMS,KAAK,GAAGN,MAAM,CAAC,6BAA6B,EAAEH,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACA,GAAG,CAAC,OAAO,CAAC,CAAC;YAC/F,IAAIoB,KAAK,KAAK,IAAI,EAAE;cAClBT,QAAQ,CAACX,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACgB,GAAG,CAAC,OAAO,EAAEI,KAAK,CAAC;cACjDrC,MAAM,CAACkC,KAAK,CAACC,KAAK,CAAC,CAAC;YACtB;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOxC,OAAA;IAAK2C,GAAG,EAAExC;EAAU;IAAAyC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChC,CAAC;AAAC7C,EAAA,CAxGID,mBAAmB;AAAA+C,EAAA,GAAnB/C,mBAAmB;AA0GzB,eAAeA,mBAAmB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}