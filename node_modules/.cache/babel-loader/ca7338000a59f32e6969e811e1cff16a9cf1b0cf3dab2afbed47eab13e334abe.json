{"ast":null,"code":"editor.Blocks.add('number-counter', {\n  label: 'Number Counter',\n  attributes: {\n    class: 'fa fa-clock-o'\n  },\n  content: '<div class=\"number-counter\">0</div>',\n  category: 'Basic',\n  traits: [{\n    type: 'number',\n    name: 'start',\n    label: 'Start Number',\n    value: 0\n  }, {\n    type: 'number',\n    name: 'end',\n    label: 'End Number',\n    value: 100\n  }, {\n    type: 'select',\n    name: 'direction',\n    label: 'Direction',\n    options: [{\n      value: 'up',\n      name: 'Up'\n    }, {\n      value: 'down',\n      name: 'Down'\n    }],\n    value: 'up'\n  }, {\n    type: 'number',\n    name: 'speed',\n    label: 'Counting Speed (milliseconds)',\n    value: 1000\n  }],\n  render: ({\n    el\n  }) => {\n    const start = el.getAttribute('data-start');\n    const end = el.getAttribute('data-end');\n    const direction = el.getAttribute('data-direction');\n    const speed = el.getAttribute('data-speed');\n\n    // Initialize the counter with the start value\n    let count = parseInt(start);\n\n    // Set the interval to update the counter\n    const interval = setInterval(() => {\n      if (direction === 'up' && count < parseInt(end)) {\n        count++;\n      } else if (direction === 'down' && count > parseInt(end)) {\n        count--;\n      } else {\n        clearInterval(interval);\n      }\n      el.innerText = count.toString();\n    }, parseInt(speed));\n  }\n});","map":{"version":3,"names":["editor","Blocks","add","label","attributes","class","content","category","traits","type","name","value","options","render","el","start","getAttribute","end","direction","speed","count","parseInt","interval","setInterval","clearInterval","innerText","toString"],"sources":["/Users/user/grapesjs-editor/src/GrapesJSEditor.js"],"sourcesContent":["editor.Blocks.add('number-counter', {\n    label: 'Number Counter',\n    attributes: { class: 'fa fa-clock-o' },\n    content: '<div class=\"number-counter\">0</div>',\n    category: 'Basic',\n    traits: [\n      {\n        type: 'number',\n        name: 'start',\n        label: 'Start Number',\n        value: 0,\n      },\n      {\n        type: 'number',\n        name: 'end',\n        label: 'End Number',\n        value: 100,\n      },\n      {\n        type: 'select',\n        name: 'direction',\n        label: 'Direction',\n        options: [\n          { value: 'up', name: 'Up' },\n          { value: 'down', name: 'Down' },\n        ],\n        value: 'up',\n      },\n      {\n        type: 'number',\n        name: 'speed',\n        label: 'Counting Speed (milliseconds)',\n        value: 1000,\n      },\n    ],\n    render: ({ el }) => {\n      const start = el.getAttribute('data-start');\n      const end = el.getAttribute('data-end');\n      const direction = el.getAttribute('data-direction');\n      const speed = el.getAttribute('data-speed');\n  \n      // Initialize the counter with the start value\n      let count = parseInt(start);\n  \n      // Set the interval to update the counter\n      const interval = setInterval(() => {\n        if (direction === 'up' && count < parseInt(end)) {\n          count++;\n        } else if (direction === 'down' && count > parseInt(end)) {\n          count--;\n        } else {\n          clearInterval(interval);\n        }\n        el.innerText = count.toString();\n      }, parseInt(speed));\n    },\n  });\n  "],"mappings":"AAAAA,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,gBAAgB,EAAE;EAChCC,KAAK,EAAE,gBAAgB;EACvBC,UAAU,EAAE;IAAEC,KAAK,EAAE;EAAgB,CAAC;EACtCC,OAAO,EAAE,qCAAqC;EAC9CC,QAAQ,EAAE,OAAO;EACjBC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbP,KAAK,EAAE,cAAc;IACrBQ,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,KAAK;IACXP,KAAK,EAAE,YAAY;IACnBQ,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,WAAW;IACjBP,KAAK,EAAE,WAAW;IAClBS,OAAO,EAAE,CACP;MAAED,KAAK,EAAE,IAAI;MAAED,IAAI,EAAE;IAAK,CAAC,EAC3B;MAAEC,KAAK,EAAE,MAAM;MAAED,IAAI,EAAE;IAAO,CAAC,CAChC;IACDC,KAAK,EAAE;EACT,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbP,KAAK,EAAE,+BAA+B;IACtCQ,KAAK,EAAE;EACT,CAAC,CACF;EACDE,MAAM,EAAEA,CAAC;IAAEC;EAAG,CAAC,KAAK;IAClB,MAAMC,KAAK,GAAGD,EAAE,CAACE,YAAY,CAAC,YAAY,CAAC;IAC3C,MAAMC,GAAG,GAAGH,EAAE,CAACE,YAAY,CAAC,UAAU,CAAC;IACvC,MAAME,SAAS,GAAGJ,EAAE,CAACE,YAAY,CAAC,gBAAgB,CAAC;IACnD,MAAMG,KAAK,GAAGL,EAAE,CAACE,YAAY,CAAC,YAAY,CAAC;;IAE3C;IACA,IAAII,KAAK,GAAGC,QAAQ,CAACN,KAAK,CAAC;;IAE3B;IACA,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIL,SAAS,KAAK,IAAI,IAAIE,KAAK,GAAGC,QAAQ,CAACJ,GAAG,CAAC,EAAE;QAC/CG,KAAK,EAAE;MACT,CAAC,MAAM,IAAIF,SAAS,KAAK,MAAM,IAAIE,KAAK,GAAGC,QAAQ,CAACJ,GAAG,CAAC,EAAE;QACxDG,KAAK,EAAE;MACT,CAAC,MAAM;QACLI,aAAa,CAACF,QAAQ,CAAC;MACzB;MACAR,EAAE,CAACW,SAAS,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC;IACjC,CAAC,EAAEL,QAAQ,CAACF,KAAK,CAAC,CAAC;EACrB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}