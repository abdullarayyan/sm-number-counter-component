{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/NumberCounterBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n// GrapesJSEditor.js\n// import React, { useEffect } from 'react';\n// import grapesjs from 'grapesjs';\n// import 'grapesjs-blocks-basic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrapesJSEditor = () => {\n  _s();\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      fromElement: true,\n      storageManager: {\n        type: 'local'\n      },\n      plugins: ['gjs-blocks-basic']\n    });\n\n    // Define the NumberCounter component\n    editor.DomComponents.addType('number-counter', {\n      model: {\n        defaults: {\n          tagName: 'div',\n          attributes: {\n            class: 'number-counter'\n          },\n          start: 0,\n          end: 100,\n          speed: 1000,\n          direction: 'up'\n        },\n        init() {\n          this.updateContent();\n        },\n        updated(prop, value) {\n          if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n            this.updateContent();\n          }\n        },\n        updateContent() {\n          const {\n            start,\n            end,\n            speed,\n            direction\n          } = this.get('attributes');\n          this.set('content', String(start));\n          let current = start;\n          const increment = direction === 'up' ? 1 : -1;\n          const interval = speed / Math.abs(end - start);\n          const update = () => {\n            current += increment;\n            this.set('content', String(current));\n            if (direction === 'up' && current <= end || direction === 'down' && current >= end) {\n              setTimeout(update, interval);\n            }\n          };\n          setTimeout(update, interval);\n        }\n      },\n      view: {\n        onRender() {\n          this.updateContent(); // Render content on initial load\n        }\n      }\n    });\n\n    // Add a block for the NumberCounter component\n    editor.BlockManager.add('number-counter-block', {\n      label: 'NumberCounter',\n      attributes: {\n        class: 'fa fa-clock-o'\n      },\n      content: '<div data-gjs-type=\"number-counter\" data-gjs-draggable=\"true\">0</div>'\n    });\n\n    // Set traits for the NumberCounter component\n    editor.on('component:selected', component => {\n      if (component.is('number-counter')) {\n        editor.TraitManager.addType('start', {\n          type: 'number',\n          name: 'Start Value',\n          changeProp: 1\n        });\n        editor.TraitManager.addType('end', {\n          type: 'number',\n          name: 'End Value',\n          changeProp: 1\n        });\n        editor.TraitManager.addType('speed', {\n          type: 'number',\n          name: 'Speed',\n          changeProp: 1\n        });\n        editor.TraitManager.addType('direction', {\n          type: 'select',\n          name: 'Direction',\n          options: [{\n            value: 'up',\n            name: 'Up'\n          }, {\n            value: 'down',\n            name: 'Down'\n          }],\n          changeProp: 1\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gjs\",\n      style: {\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(GrapesJSEditor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GrapesJSEditor;\nexport default GrapesJSEditor;\n\n// const GrapesJSEditor: React.FC = () => {\n//   useEffect(() => {\n//     const editor = grapesjs.init({\n//       container: '#gjs',\n//       fromElement: true,\n//       storageManager: {\n//         autosave: true,\n//         type: 'local',\n//         stepsBeforeSave: 1,\n//       },\n//       plugins: ['gjs-blocks-basic'], // Example: Basic Blocks plugin\n//       blockManager: {\n//         appendTo: '#blocks',\n//         blocks: [\n//           {\n//             id: 'number-counter',\n//             label: 'NumberCounter',\n//             attributes: { class: 'fa fa-clock-o' },\n//             content: '<div data-gjs-type=\"number-counter\">0</div>',\n//           },\n//         ],\n//       },\n//     });\n\n//     // Define the NumberCounter component and its logic\n//     editor.DomComponents.addType('number-counter', {\n//       model: {\n//         defaults: {\n//           tagName: 'div',\n//           content: '0',\n//           attributes: { class: 'number-counter' },\n//           start: 0,\n//           end: 100,\n//           speed: 1000,\n//           direction: 'up',\n//         },\n//       },\n//       init() {\n//         this.updateContent();\n//       },\n//       updated(prop, value) {\n//         if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n//           this.updateContent();\n//         }\n//       },\n//       updateContent() {\n//         const { start, end, speed, direction } = this.get('attributes');\n//         this.set('content', String(start));\n\n//         let current = start;\n//         const increment = direction === 'up' ? 1 : -1;\n//         const interval = speed / Math.abs(end - start);\n\n//         const update = () => {\n//           current += increment;\n//           this.set('content', String(current));\n//           if ((direction === 'up' && current <= end) || (direction === 'down' && current >= end)) {\n//             setTimeout(update, interval);\n//           }\n//         };\n\n//         setTimeout(update, interval);\n//       },\n//     });\n\n//     // Add a trait for customizing the NumberCounter\n//     editor.TraitManager.addType('number-counter-options', {\n//       noValue: true,\n//       createInput: function (el) {\n//         const input = document.createElement('input');\n//         input.setAttribute('placeholder', 'Enter a value');\n//         input.value = el.innerHTML;\n//         return input;\n//       },\n//       onUpdate: function (el, value) {\n//         el.innerHTML = value;\n//       },\n//     });\n\n//     // Set traits for the NumberCounter component\n//     editor.on('component:selected', (component) => {\n//       if (component.is('number-counter')) {\n//         editor.TraitManager.addType('start', {\n//           type: 'number-counter-options',\n//           name: 'Start Value',\n//         });\n//         editor.TraitManager.addType('end', {\n//           type: 'number-counter-options',\n//           name: 'End Value',\n//         });\n//         editor.TraitManager.addType('speed', {\n//           type: 'number-counter-options',\n//           name: 'Speed',\n//         });\n//         editor.TraitManager.addType('direction', {\n//           type: 'number-counter-options',\n//           name: 'Direction',\n//         });\n//       }\n//     });\n\n//     // Add a blank canvas for users to start working on\n//     editor.setComponents('<div data-gjs-type=\"number-counter\">0</div>');\n//   }, []);\n\n//   return (\n//     <div>\n//       <div id=\"gjs\" style={{ height: '500px' }}></div>\n//       <div id=\"blocks\" style={{ display: 'none' }}></div>\n//     </div>\n//   );\n// };\n\n// export default GrapesJSEditor;\nvar _c;\n$RefreshReg$(_c, \"GrapesJSEditor\");","map":{"version":3,"names":["React","useEffect","grapesjs","jsxDEV","_jsxDEV","GrapesJSEditor","_s","editor","init","container","fromElement","storageManager","type","plugins","DomComponents","addType","model","defaults","tagName","attributes","class","start","end","speed","direction","updateContent","updated","prop","value","get","set","String","current","increment","interval","Math","abs","update","setTimeout","view","onRender","BlockManager","add","label","content","on","component","is","TraitManager","name","changeProp","options","children","id","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/NumberCounterBlock.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n// GrapesJSEditor.js\n// import React, { useEffect } from 'react';\n// import grapesjs from 'grapesjs';\n// import 'grapesjs-blocks-basic';\n\nconst GrapesJSEditor = () => {\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      fromElement: true,\n      storageManager: {\n        type: 'local',\n      },\n      plugins: ['gjs-blocks-basic'],\n    });\n\n    // Define the NumberCounter component\n    editor.DomComponents.addType('number-counter', {\n      model: {\n        defaults: {\n          tagName: 'div',\n          attributes: { class: 'number-counter' },\n          start: 0,\n          end: 100,\n          speed: 1000,\n          direction: 'up',\n        },\n        init() {\n          this.updateContent();\n        },\n        updated(prop, value) {\n          if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n            this.updateContent();\n          }\n        },\n        updateContent() {\n          const { start, end, speed, direction } = this.get('attributes');\n          this.set('content', String(start));\n\n          let current = start;\n          const increment = direction === 'up' ? 1 : -1;\n          const interval = speed / Math.abs(end - start);\n\n          const update = () => {\n            current += increment;\n            this.set('content', String(current));\n            if ((direction === 'up' && current <= end) || (direction === 'down' && current >= end)) {\n              setTimeout(update, interval);\n            }\n          };\n\n          setTimeout(update, interval);\n        },\n      },\n      view: {\n        onRender() {\n          this.updateContent(); // Render content on initial load\n        },\n      },\n    });\n\n    // Add a block for the NumberCounter component\n    editor.BlockManager.add('number-counter-block', {\n      label: 'NumberCounter',\n      attributes: { class: 'fa fa-clock-o' },\n      content: '<div data-gjs-type=\"number-counter\" data-gjs-draggable=\"true\">0</div>',\n    });\n\n    // Set traits for the NumberCounter component\n    editor.on('component:selected', (component) => {\n      if (component.is('number-counter')) {\n        editor.TraitManager.addType('start', {\n          type: 'number',\n          name: 'Start Value',\n          changeProp: 1,\n        });\n        editor.TraitManager.addType('end', {\n          type: 'number',\n          name: 'End Value',\n          changeProp: 1,\n        });\n        editor.TraitManager.addType('speed', {\n          type: 'number',\n          name: 'Speed',\n          changeProp: 1,\n        });\n        editor.TraitManager.addType('direction', {\n          type: 'select',\n          name: 'Direction',\n          options: [\n            { value: 'up', name: 'Up' },\n            { value: 'down', name: 'Down' },\n          ],\n          changeProp: 1,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <div>\n      <div id=\"gjs\" style={{ height: '500px' }}></div>\n    </div>\n  );\n};\n\nexport default GrapesJSEditor;\n\n\n// const GrapesJSEditor: React.FC = () => {\n//   useEffect(() => {\n//     const editor = grapesjs.init({\n//       container: '#gjs',\n//       fromElement: true,\n//       storageManager: {\n//         autosave: true,\n//         type: 'local',\n//         stepsBeforeSave: 1,\n//       },\n//       plugins: ['gjs-blocks-basic'], // Example: Basic Blocks plugin\n//       blockManager: {\n//         appendTo: '#blocks',\n//         blocks: [\n//           {\n//             id: 'number-counter',\n//             label: 'NumberCounter',\n//             attributes: { class: 'fa fa-clock-o' },\n//             content: '<div data-gjs-type=\"number-counter\">0</div>',\n//           },\n//         ],\n//       },\n//     });\n\n//     // Define the NumberCounter component and its logic\n//     editor.DomComponents.addType('number-counter', {\n//       model: {\n//         defaults: {\n//           tagName: 'div',\n//           content: '0',\n//           attributes: { class: 'number-counter' },\n//           start: 0,\n//           end: 100,\n//           speed: 1000,\n//           direction: 'up',\n//         },\n//       },\n//       init() {\n//         this.updateContent();\n//       },\n//       updated(prop, value) {\n//         if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n//           this.updateContent();\n//         }\n//       },\n//       updateContent() {\n//         const { start, end, speed, direction } = this.get('attributes');\n//         this.set('content', String(start));\n\n//         let current = start;\n//         const increment = direction === 'up' ? 1 : -1;\n//         const interval = speed / Math.abs(end - start);\n\n//         const update = () => {\n//           current += increment;\n//           this.set('content', String(current));\n//           if ((direction === 'up' && current <= end) || (direction === 'down' && current >= end)) {\n//             setTimeout(update, interval);\n//           }\n//         };\n\n//         setTimeout(update, interval);\n//       },\n//     });\n\n//     // Add a trait for customizing the NumberCounter\n//     editor.TraitManager.addType('number-counter-options', {\n//       noValue: true,\n//       createInput: function (el) {\n//         const input = document.createElement('input');\n//         input.setAttribute('placeholder', 'Enter a value');\n//         input.value = el.innerHTML;\n//         return input;\n//       },\n//       onUpdate: function (el, value) {\n//         el.innerHTML = value;\n//       },\n//     });\n\n//     // Set traits for the NumberCounter component\n//     editor.on('component:selected', (component) => {\n//       if (component.is('number-counter')) {\n//         editor.TraitManager.addType('start', {\n//           type: 'number-counter-options',\n//           name: 'Start Value',\n//         });\n//         editor.TraitManager.addType('end', {\n//           type: 'number-counter-options',\n//           name: 'End Value',\n//         });\n//         editor.TraitManager.addType('speed', {\n//           type: 'number-counter-options',\n//           name: 'Speed',\n//         });\n//         editor.TraitManager.addType('direction', {\n//           type: 'number-counter-options',\n//           name: 'Direction',\n//         });\n//       }\n//     });\n\n//     // Add a blank canvas for users to start working on\n//     editor.setComponents('<div data-gjs-type=\"number-counter\">0</div>');\n//   }, []);\n\n//   return (\n//     <div>\n//       <div id=\"gjs\" style={{ height: '500px' }}></div>\n//       <div id=\"blocks\" style={{ display: 'none' }}></div>\n//     </div>\n//   );\n// };\n\n// export default GrapesJSEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}