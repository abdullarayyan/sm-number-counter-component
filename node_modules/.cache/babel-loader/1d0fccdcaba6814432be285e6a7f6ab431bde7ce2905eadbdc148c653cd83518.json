{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/GrapesJSEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounterEditor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: {\n          autoload: false\n        } // Disable auto-loading of blocks\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: {\n          class: 'fa fa-clock-o'\n        },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        // Define how the block should render\n        render: ({\n          el\n        }) => {\n          // Customize the rendering logic here\n          let count = 0;\n          const interval = setInterval(() => {\n            const customData = el.getAttribute('data-end');\n            const end = customData ? parseInt(customData) : 100;\n            const customDirection = el.getAttribute('data-direction');\n            const direction = customDirection || 'up';\n            const customSpeed = el.getAttribute('data-speed');\n            const speed = customSpeed ? parseInt(customSpeed) : 1000;\n            if (direction === 'up' && count < end) {\n              count++;\n            } else if (direction === 'down' && count > end) {\n              count--;\n            } else {\n              clearInterval(interval);\n            }\n            el.innerText = count.toString();\n          }, 1000);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounterEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounterEditor;\nexport default NumberCounterEditor;\nvar _c;\n$RefreshReg$(_c, \"NumberCounterEditor\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounterEditor","_s","editorRef","current","editor","init","container","storageManager","autoload","Blocks","add","label","attributes","class","content","category","render","el","count","interval","setInterval","customData","getAttribute","end","parseInt","customDirection","direction","customSpeed","speed","clearInterval","innerText","toString","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/GrapesJSEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nconst NumberCounterEditor = () => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: { autoload: false }, // Disable auto-loading of blocks\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: { class: 'fa fa-clock-o' },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        // Define how the block should render\n        render: ({ el }) => {\n          // Customize the rendering logic here\n          let count = 0;\n\n          const interval = setInterval(() => {\n            const customData = el.getAttribute('data-end');\n            const end = customData ? parseInt(customData) : 100;\n\n            const customDirection = el.getAttribute('data-direction');\n            const direction = customDirection || 'up';\n\n            const customSpeed = el.getAttribute('data-speed');\n            const speed = customSpeed ? parseInt(customSpeed) : 1000;\n\n            if (direction === 'up' && count < end) {\n              count++;\n            } else if (direction === 'down' && count > end) {\n              count--;\n            } else {\n              clearInterval(interval);\n            }\n            el.innerText = count.toString();\n          }, 1000);\n        },\n      });\n    }\n  }, []);\n\n  return <div ref={editorRef} />;\n};\n\nexport default NumberCounterEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,CAACC,OAAO,EAAE;MACrB,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAI,CAAC;QAC3BC,SAAS,EAAEJ,SAAS,CAACC,OAAO;QAC5BI,cAAc,EAAE;UAAEC,QAAQ,EAAE;QAAM,CAAC,CAAE;MACvC,CAAC,CAAC;;MAEF;MACAJ,MAAM,CAACK,MAAM,CAACC,GAAG,CAAC,gBAAgB,EAAE;QAClCC,KAAK,EAAE,gBAAgB;QACvBC,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAgB,CAAC;QACtCC,OAAO,EAAE,qCAAqC;QAC9CC,QAAQ,EAAE,OAAO;QACjB;QACAC,MAAM,EAAEA,CAAC;UAAEC;QAAG,CAAC,KAAK;UAClB;UACA,IAAIC,KAAK,GAAG,CAAC;UAEb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;YACjC,MAAMC,UAAU,GAAGJ,EAAE,CAACK,YAAY,CAAC,UAAU,CAAC;YAC9C,MAAMC,GAAG,GAAGF,UAAU,GAAGG,QAAQ,CAACH,UAAU,CAAC,GAAG,GAAG;YAEnD,MAAMI,eAAe,GAAGR,EAAE,CAACK,YAAY,CAAC,gBAAgB,CAAC;YACzD,MAAMI,SAAS,GAAGD,eAAe,IAAI,IAAI;YAEzC,MAAME,WAAW,GAAGV,EAAE,CAACK,YAAY,CAAC,YAAY,CAAC;YACjD,MAAMM,KAAK,GAAGD,WAAW,GAAGH,QAAQ,CAACG,WAAW,CAAC,GAAG,IAAI;YAExD,IAAID,SAAS,KAAK,IAAI,IAAIR,KAAK,GAAGK,GAAG,EAAE;cACrCL,KAAK,EAAE;YACT,CAAC,MAAM,IAAIQ,SAAS,KAAK,MAAM,IAAIR,KAAK,GAAGK,GAAG,EAAE;cAC9CL,KAAK,EAAE;YACT,CAAC,MAAM;cACLW,aAAa,CAACV,QAAQ,CAAC;YACzB;YACAF,EAAE,CAACa,SAAS,GAAGZ,KAAK,CAACa,QAAQ,CAAC,CAAC;UACjC,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhC,OAAA;IAAKiC,GAAG,EAAE9B;EAAU;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChC,CAAC;AAACnC,EAAA,CA9CID,mBAAmB;AAAAqC,EAAA,GAAnBrC,mBAAmB;AAgDzB,eAAeA,mBAAmB;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}