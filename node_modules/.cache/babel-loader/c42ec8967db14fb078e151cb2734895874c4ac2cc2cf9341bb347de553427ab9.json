{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/GrapesJSEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberCounterEditor = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: {\n          autoload: false\n        }\n        // Add any other configuration options as needed\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: {\n          class: 'fa fa-clock-o'\n        },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        render: ({\n          el\n        }) => {\n          const customData = el.getAttribute('data-custom-data');\n          if (customData) {\n            const {\n              start,\n              end,\n              direction,\n              speed\n            } = JSON.parse(customData);\n            let count = start;\n            const interval = setInterval(() => {\n              if (direction === 'up' && count < end) {\n                count++;\n              } else if (direction === 'down' && count > end) {\n                count--;\n              } else {\n                clearInterval(interval);\n              }\n              el.innerText = count.toString();\n            }, speed);\n          }\n        }\n      });\n\n      // Define Component Settings for the Number Counter block\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'Start',\n        label: 'Start Number',\n        type: 'number',\n        changeProp: 1\n      });\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'End',\n        label: 'End Number',\n        type: 'number',\n        changeProp: 1\n      });\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'Direction',\n        label: 'Direction (up or down)',\n        type: 'select',\n        options: [{\n          value: 'up',\n          name: 'Up'\n        }, {\n          value: 'down',\n          name: 'Down'\n        }],\n        changeProp: 1\n      });\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'Speed',\n        label: 'Speed (milliseconds)',\n        type: 'number',\n        changeProp: 1\n      });\n\n      // Add Component Settings panel for the Number Counter block\n      editor.Panels.addPanel({\n        id: 'number-counter-props-panel',\n        visible: false,\n        buttons: [{\n          id: 'open-props',\n          active: true,\n          label: 'Properties',\n          command: 'show-props',\n          context: 'number-counter'\n        }]\n      });\n\n      // Add a command to show the Component Settings panel\n      editor.Commands.add('show-props', {\n        run(editor, sender) {\n          editor.Panels.getPanel('number-counter-props-panel').set('active', 1);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n};\n_s(NumberCounterEditor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = NumberCounterEditor;\nconst editor = grapesjs.init({\n  container: '#gjs',\n  storageManager: {\n    autoload: false\n  } // Disable auto-loading of blocks\n});\n\n// Define the Number Counter block\neditor.Blocks.add('number-counter', {\n  label: 'Number Counter',\n  attributes: {\n    class: 'fa fa-clock-o'\n  },\n  content: '<div class=\"number-counter\">0</div>',\n  category: 'Basic',\n  customData: {\n    start: 0,\n    end: 100,\n    direction: 'up',\n    speed: 1000\n  },\n  render: ({\n    el\n  }) => {\n    const customData = el.getAttribute('data-custom-data');\n    if (customData) {\n      const {\n        start,\n        end,\n        direction,\n        speed\n      } = JSON.parse(customData);\n      let count = start;\n      const interval = setInterval(() => {\n        if (direction === 'up' && count < end) {\n          count++;\n        } else if (direction === 'down' && count > end) {\n          count--;\n        } else {\n          clearInterval(interval);\n        }\n        el.innerText = count.toString();\n      }, speed);\n    }\n  }\n});\n\n// Event listener for block rendering\neditor.on('block:rendered', block => {\n  if (block && block.get('type') === 'number-counter') {\n    // Custom logic when the Number Counter block is rendered\n    console.log('Number Counter block rendered:', block);\n  }\n});\n\n// Event listener for attribute updates\neditor.on('change:attributes', block => {\n  if (block && block.get('type') === 'number-counter') {\n    const changedAttributes = block.getChangedAttributes();\n    if (changedAttributes.hasOwnProperty('start')) {\n      // Handle changes to the 'start' attribute\n      console.log('Start attribute updated to:', changedAttributes.start);\n    }\n    if (changedAttributes.hasOwnProperty('end')) {\n      // Handle changes to the 'end' attribute\n      console.log('End attribute updated to:', changedAttributes.end);\n    }\n    if (changedAttributes.hasOwnProperty('direction')) {\n      // Handle changes to the 'direction' attribute\n      console.log('Direction attribute updated to:', changedAttributes.direction);\n    }\n    if (changedAttributes.hasOwnProperty('speed')) {\n      // Handle changes to the 'speed' attribute\n      console.log('Speed attribute updated to:', changedAttributes.speed);\n    }\n  }\n});\n\n// Create a Number Counter block\neditor.Blocks.add('number-counter');\nexport default NumberCounterEditor;\nvar _c;\n$RefreshReg$(_c, \"NumberCounterEditor\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","jsxDEV","_jsxDEV","NumberCounterEditor","_s","editorRef","current","editor","init","container","storageManager","autoload","Blocks","add","label","attributes","class","content","category","render","el","customData","getAttribute","start","end","direction","speed","JSON","parse","count","interval","setInterval","clearInterval","innerText","toString","TraitManager","addType","name","type","changeProp","options","value","Panels","addPanel","id","visible","buttons","active","command","context","Commands","run","sender","getPanel","set","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","on","block","get","console","log","changedAttributes","getChangedAttributes","hasOwnProperty","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/GrapesJSEditor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n\nconst NumberCounterEditor = () => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    if (editorRef.current) {\n      const editor = grapesjs.init({\n        container: editorRef.current,\n        storageManager: { autoload: false },\n        // Add any other configuration options as needed\n      });\n\n      // Define the Number Counter block\n      editor.Blocks.add('number-counter', {\n        label: 'Number Counter',\n        attributes: { class: 'fa fa-clock-o' },\n        content: '<div class=\"number-counter\">0</div>',\n        category: 'Basic',\n        render: ({ el }) => {\n          const customData = el.getAttribute('data-custom-data');\n          if (customData) {\n            const { start, end, direction, speed } = JSON.parse(customData);\n            let count = start;\n\n            const interval = setInterval(() => {\n              if (direction === 'up' && count < end) {\n                count++;\n              } else if (direction === 'down' && count > end) {\n                count--;\n              } else {\n                clearInterval(interval);\n              }\n              el.innerText = count.toString();\n            }, speed);\n          }\n        },\n      });\n\n      // Define Component Settings for the Number Counter block\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'Start',\n        label: 'Start Number',\n        type: 'number',\n        changeProp: 1,\n      });\n\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'End',\n        label: 'End Number',\n        type: 'number',\n        changeProp: 1,\n      });\n\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'Direction',\n        label: 'Direction (up or down)',\n        type: 'select',\n        options: [\n          { value: 'up', name: 'Up' },\n          { value: 'down', name: 'Down' },\n        ],\n        changeProp: 1,\n      });\n\n      editor.TraitManager.addType('number-counter-props', {\n        name: 'Speed',\n        label: 'Speed (milliseconds)',\n        type: 'number',\n        changeProp: 1,\n      });\n\n      // Add Component Settings panel for the Number Counter block\n      editor.Panels.addPanel({\n        id: 'number-counter-props-panel',\n        visible: false,\n        buttons: [\n          {\n            id: 'open-props',\n            active: true,\n            label: 'Properties',\n            command: 'show-props',\n            context: 'number-counter',\n          },\n        ],\n      });\n\n      // Add a command to show the Component Settings panel\n      editor.Commands.add('show-props', {\n        run(editor, sender) {\n          editor.Panels.getPanel('number-counter-props-panel').set('active', 1);\n        },\n      });\n    }\n  }, []);\n\n  return <div ref={editorRef} />;\n};\nconst editor = grapesjs.init({\n    container: '#gjs',\n    storageManager: { autoload: false }, // Disable auto-loading of blocks\n  });\n  \n  // Define the Number Counter block\n  editor.Blocks.add('number-counter', {\n    label: 'Number Counter',\n    attributes: { class: 'fa fa-clock-o' },\n    content: '<div class=\"number-counter\">0</div>',\n    category: 'Basic',\n    customData: {\n      start: 0,\n      end: 100,\n      direction: 'up',\n      speed: 1000,\n    },\n    render: ({ el }) => {\n      const customData = el.getAttribute('data-custom-data');\n      if (customData) {\n        const { start, end, direction, speed } = JSON.parse(customData);\n        let count = start;\n  \n        const interval = setInterval(() => {\n          if (direction === 'up' && count < end) {\n            count++;\n          } else if (direction === 'down' && count > end) {\n            count--;\n          } else {\n            clearInterval(interval);\n          }\n          el.innerText = count.toString();\n        }, speed);\n      }\n    },\n  });\n  \n  // Event listener for block rendering\n  editor.on('block:rendered', (block) => {\n    if (block && block.get('type') === 'number-counter') {\n      // Custom logic when the Number Counter block is rendered\n      console.log('Number Counter block rendered:', block);\n    }\n  });\n  \n  // Event listener for attribute updates\n  editor.on('change:attributes', (block) => {\n    if (block && block.get('type') === 'number-counter') {\n      const changedAttributes = block.getChangedAttributes();\n  \n      if (changedAttributes.hasOwnProperty('start')) {\n        // Handle changes to the 'start' attribute\n        console.log('Start attribute updated to:', changedAttributes.start);\n      }\n  \n      if (changedAttributes.hasOwnProperty('end')) {\n        // Handle changes to the 'end' attribute\n        console.log('End attribute updated to:', changedAttributes.end);\n      }\n  \n      if (changedAttributes.hasOwnProperty('direction')) {\n        // Handle changes to the 'direction' attribute\n        console.log('Direction attribute updated to:', changedAttributes.direction);\n      }\n  \n      if (changedAttributes.hasOwnProperty('speed')) {\n        // Handle changes to the 'speed' attribute\n        console.log('Speed attribute updated to:', changedAttributes.speed);\n      }\n    }\n  });\n  \n  // Create a Number Counter block\n  editor.Blocks.add('number-counter');\n\nexport default NumberCounterEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}