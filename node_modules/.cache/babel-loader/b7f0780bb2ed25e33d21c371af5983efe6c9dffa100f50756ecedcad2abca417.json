{"ast":null,"code":"// src/NumberCounter.js\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nfunction NumberCounterComponent(editor) {\n  editor.DomComponents.addType('number-counter', {\n    model: {\n      defaults: {\n        traits: [{\n          type: 'number',\n          name: 'start',\n          label: 'Start Number'\n        }, {\n          type: 'number',\n          name: 'end',\n          label: 'End Number'\n        }, {\n          type: 'number',\n          name: 'speed',\n          label: 'Counting Speed'\n        }, {\n          type: 'checkbox',\n          name: 'direction',\n          label: 'Count Up'\n        }, {\n          type: 'text',\n          name: 'prefix',\n          label: 'Prefix'\n        }, {\n          type: 'text',\n          name: 'suffix',\n          label: 'Suffix'\n        }, {\n          type: 'text',\n          name: 'separator',\n          label: 'Separator'\n        }],\n        content: '0'\n      }\n    },\n    view: {\n      onRender() {\n        const model = this.model;\n        const start = model.get('start');\n        const end = model.get('end');\n        const speed = model.get('speed');\n        const direction = model.get('direction');\n        const prefix = model.get('prefix');\n        const suffix = model.get('suffix');\n        const separator = model.get('separator');\n        let currentNumber = start;\n        let increment = 1;\n        if (!direction) {\n          currentNumber = end;\n          increment = -1;\n        }\n        setInterval(() => {\n          if (direction && currentNumber >= end || !direction && currentNumber <= start) {\n            return;\n          }\n          this.el.innerHTML = prefix + currentNumber + suffix;\n          currentNumber += increment;\n        }, speed);\n      }\n    }\n  });\n}\n_c = NumberCounterComponent;\nexport default NumberCounterComponent;\nvar _c;\n$RefreshReg$(_c, \"NumberCounterComponent\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","NumberCounterComponent","editor","DomComponents","addType","model","defaults","traits","type","name","label","content","view","onRender","start","get","end","speed","direction","prefix","suffix","separator","currentNumber","increment","setInterval","el","innerHTML","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/NumberCounter.js"],"sourcesContent":["// src/NumberCounter.js\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n\n\nfunction NumberCounterComponent(editor) {\n  editor.DomComponents.addType('number-counter', {\n    model: {\n      defaults: {\n        traits: [\n          { type: 'number', name: 'start', label: 'Start Number' },\n          { type: 'number', name: 'end', label: 'End Number' },\n          { type: 'number', name: 'speed', label: 'Counting Speed' },\n          { type: 'checkbox', name: 'direction', label: 'Count Up' },\n          { type: 'text', name: 'prefix', label: 'Prefix' },\n          { type: 'text', name: 'suffix', label: 'Suffix' },\n          { type: 'text', name: 'separator', label: 'Separator' },\n        ],\n        content: '0',\n      },\n    },\n    view: {\n      onRender() {\n        const model = this.model;\n        const start = model.get('start');\n        const end = model.get('end');\n        const speed = model.get('speed');\n        const direction = model.get('direction');\n        const prefix = model.get('prefix');\n        const suffix = model.get('suffix');\n        const separator = model.get('separator');\n        let currentNumber = start;\n        let increment = 1;\n\n        if (!direction) {\n          currentNumber = end;\n          increment = -1;\n        }\n\n        setInterval(() => {\n          if ((direction && currentNumber >= end) || (!direction && currentNumber <= start)) {\n            return;\n          }\n\n          this.el.innerHTML = prefix + currentNumber + suffix;\n          currentNumber += increment;\n        }, speed);\n      },\n    },\n  });\n}\n\n\nexport default NumberCounterComponent;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAO,kCAAkC;AAGzC,SAASC,sBAAsBA,CAACC,MAAM,EAAE;EACtCA,MAAM,CAACC,aAAa,CAACC,OAAO,CAAC,gBAAgB,EAAE;IAC7CC,KAAK,EAAE;MACLC,QAAQ,EAAE;QACRC,MAAM,EAAE,CACN;UAAEC,IAAI,EAAE,QAAQ;UAAEC,IAAI,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAe,CAAC,EACxD;UAAEF,IAAI,EAAE,QAAQ;UAAEC,IAAI,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAa,CAAC,EACpD;UAAEF,IAAI,EAAE,QAAQ;UAAEC,IAAI,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAiB,CAAC,EAC1D;UAAEF,IAAI,EAAE,UAAU;UAAEC,IAAI,EAAE,WAAW;UAAEC,KAAK,EAAE;QAAW,CAAC,EAC1D;UAAEF,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAS,CAAC,EACjD;UAAEF,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAS,CAAC,EACjD;UAAEF,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAE,WAAW;UAAEC,KAAK,EAAE;QAAY,CAAC,CACxD;QACDC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,IAAI,EAAE;MACJC,QAAQA,CAAA,EAAG;QACT,MAAMR,KAAK,GAAG,IAAI,CAACA,KAAK;QACxB,MAAMS,KAAK,GAAGT,KAAK,CAACU,GAAG,CAAC,OAAO,CAAC;QAChC,MAAMC,GAAG,GAAGX,KAAK,CAACU,GAAG,CAAC,KAAK,CAAC;QAC5B,MAAME,KAAK,GAAGZ,KAAK,CAACU,GAAG,CAAC,OAAO,CAAC;QAChC,MAAMG,SAAS,GAAGb,KAAK,CAACU,GAAG,CAAC,WAAW,CAAC;QACxC,MAAMI,MAAM,GAAGd,KAAK,CAACU,GAAG,CAAC,QAAQ,CAAC;QAClC,MAAMK,MAAM,GAAGf,KAAK,CAACU,GAAG,CAAC,QAAQ,CAAC;QAClC,MAAMM,SAAS,GAAGhB,KAAK,CAACU,GAAG,CAAC,WAAW,CAAC;QACxC,IAAIO,aAAa,GAAGR,KAAK;QACzB,IAAIS,SAAS,GAAG,CAAC;QAEjB,IAAI,CAACL,SAAS,EAAE;UACdI,aAAa,GAAGN,GAAG;UACnBO,SAAS,GAAG,CAAC,CAAC;QAChB;QAEAC,WAAW,CAAC,MAAM;UAChB,IAAKN,SAAS,IAAII,aAAa,IAAIN,GAAG,IAAM,CAACE,SAAS,IAAII,aAAa,IAAIR,KAAM,EAAE;YACjF;UACF;UAEA,IAAI,CAACW,EAAE,CAACC,SAAS,GAAGP,MAAM,GAAGG,aAAa,GAAGF,MAAM;UACnDE,aAAa,IAAIC,SAAS;QAC5B,CAAC,EAAEN,KAAK,CAAC;MACX;IACF;EACF,CAAC,CAAC;AACJ;AAACU,EAAA,GA7CQ1B,sBAAsB;AAgD/B,eAAeA,sBAAsB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}