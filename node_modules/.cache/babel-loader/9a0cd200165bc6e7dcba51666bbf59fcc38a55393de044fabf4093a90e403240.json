{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/NumberCounterBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrapesJSEditor = () => {\n  _s();\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      fromElement: true,\n      storageManager: {\n        // Enable trait storage\n        autosave: true,\n        type: 'local',\n        stepsBeforeSave: 1\n      },\n      plugins: ['grapesjs-plugin-ckeditor'],\n      // Example: CKEditor plugin\n      pluginsOpts: {\n        'grapesjs-plugin-ckeditor': {\n          // CKEditor options\n        }\n      },\n      blockManager: {\n        appendTo: '#blocks',\n        blocks: [{\n          id: 'number-counter',\n          label: 'NumberCounter',\n          content: {\n            type: 'number-counter',\n            components: [{\n              type: 'number-counter',\n              start: 0,\n              end: 100,\n              speed: 1000,\n              direction: 'up'\n            }]\n          }\n        }]\n      }\n    });\n\n    // Define the NumberCounter component and its logic\n    editor.DomComponents.addType('number-counter', {\n      model: {\n        defaults: {\n          tagName: 'div',\n          content: '0',\n          attributes: {\n            class: 'number-counter'\n          },\n          start: 0,\n          end: 100,\n          speed: 1000,\n          direction: 'up'\n        }\n      },\n      init() {\n        this.updateContent();\n      },\n      updated(prop, value) {\n        if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n          this.updateContent();\n        }\n      },\n      updateContent() {\n        const {\n          start,\n          end,\n          speed,\n          direction\n        } = this.get('attributes');\n        this.set('content', String(start));\n        let current = start;\n        const increment = direction === 'up' ? 1 : -1;\n        const interval = speed / Math.abs(end - start);\n        const update = () => {\n          current += increment;\n          this.set('content', String(current));\n          if (direction === 'up' && current <= end || direction === 'down' && current >= end) {\n            setTimeout(update, interval);\n          }\n        };\n        setTimeout(update, interval);\n      }\n    });\n\n    // Add a trait for customizing the NumberCounter\n    editor.TraitManager.addType('number-counter-options', {\n      noValue: true,\n      createInput(el) {\n        const input = document.createElement('input');\n        input.setAttribute('placeholder', 'Enter a value');\n        input.value = el.innerHTML;\n        return input;\n      },\n      onUpdate(el, value) {\n        el.innerHTML = value;\n      }\n    });\n\n    // Enable trait editing for the NumberCounter\n    editor.DomComponents.get('number-counter').set('traits', ['number-counter-options']);\n\n    // Add a blank canvas for users to start working on\n    editor.setComponents('<div data-gjs-type=\"number-counter\">0</div>');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gjs\",\n      style: {\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"blocks\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(GrapesJSEditor, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GrapesJSEditor;\nexport default GrapesJSEditor;\nvar _c;\n$RefreshReg$(_c, \"GrapesJSEditor\");","map":{"version":3,"names":["React","useEffect","grapesjs","jsxDEV","_jsxDEV","GrapesJSEditor","_s","editor","init","container","fromElement","storageManager","autosave","type","stepsBeforeSave","plugins","pluginsOpts","blockManager","appendTo","blocks","id","label","content","components","start","end","speed","direction","DomComponents","addType","model","defaults","tagName","attributes","class","updateContent","updated","prop","value","get","set","String","current","increment","interval","Math","abs","update","setTimeout","TraitManager","noValue","createInput","el","input","document","createElement","setAttribute","innerHTML","onUpdate","setComponents","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","display","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/NumberCounterBlock.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport grapesjs from 'grapesjs';\nimport 'grapesjs/dist/css/grapes.min.css';\n\n\nconst GrapesJSEditor: React.FC = () => {\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: '#gjs',\n      fromElement: true,\n      storageManager: {\n        // Enable trait storage\n        autosave: true,\n        type: 'local',\n        stepsBeforeSave: 1,\n      },\n      plugins: ['grapesjs-plugin-ckeditor'], // Example: CKEditor plugin\n      pluginsOpts: {\n        'grapesjs-plugin-ckeditor': {\n          // CKEditor options\n        },\n      },\n      blockManager: {\n        appendTo: '#blocks',\n        blocks: [\n          {\n            id: 'number-counter',\n            label: 'NumberCounter',\n            content: {\n              type: 'number-counter',\n              components: [\n                {\n                  type: 'number-counter',\n                  start: 0,\n                  end: 100,\n                  speed: 1000,\n                  direction: 'up',\n                },\n              ],\n            },\n          },\n        ],\n      },\n    });\n\n    // Define the NumberCounter component and its logic\n    editor.DomComponents.addType('number-counter', {\n      model: {\n        defaults: {\n          tagName: 'div',\n          content: '0',\n          attributes: { class: 'number-counter' },\n          start: 0,\n          end: 100,\n          speed: 1000,\n          direction: 'up',\n        },\n      },\n      init() {\n        this.updateContent();\n      },\n      updated(prop, value) {\n        if (prop === 'start' || prop === 'end' || prop === 'speed' || prop === 'direction') {\n          this.updateContent();\n        }\n      },\n      updateContent() {\n        const { start, end, speed, direction } = this.get('attributes');\n        this.set('content', String(start));\n\n        let current = start;\n        const increment = direction === 'up' ? 1 : -1;\n        const interval = speed / Math.abs(end - start);\n\n        const update = () => {\n          current += increment;\n          this.set('content', String(current));\n          if ((direction === 'up' && current <= end) || (direction === 'down' && current >= end)) {\n            setTimeout(update, interval);\n          }\n        };\n\n        setTimeout(update, interval);\n      },\n    });\n\n    // Add a trait for customizing the NumberCounter\n    editor.TraitManager.addType('number-counter-options', {\n      noValue: true,\n      createInput(el) {\n        const input = document.createElement('input');\n        input.setAttribute('placeholder', 'Enter a value');\n        input.value = el.innerHTML;\n        return input;\n      },\n      onUpdate(el, value) {\n        el.innerHTML = value;\n      },\n    });\n\n    // Enable trait editing for the NumberCounter\n    editor.DomComponents.get('number-counter').set('traits', ['number-counter-options']);\n\n    // Add a blank canvas for users to start working on\n    editor.setComponents('<div data-gjs-type=\"number-counter\">0</div>');\n  }, []);\n\n  return (\n    <div>\n      <div id=\"gjs\" style={{ height: '500px' }}></div>\n      <div id=\"blocks\" style={{ display: 'none' }}></div>\n    </div>\n  );\n};\n\nexport default GrapesJSEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}