{"ast":null,"code":"var _jsxFileName = \"/Users/user/grapesjs-editor/src/CounterNumberBlock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport CounterNumberComponent from './CounterNumberComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterNumberBlock = () => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: editorRef.current\n      // ... other GrapesJS options ...\n    });\n\n    editor.DomComponents.addType('CounterNumber', {\n      model: {\n        defaults: {\n          type: 'CounterNumber',\n          count: 0\n        }\n      },\n      view: CounterNumberComponent\n    });\n    editor.Blocks.add('CounterNumber', {\n      label: 'Number Counter',\n      attributes: {\n        class: 'fa fa-clock-o'\n      },\n      content: {\n        type: 'CounterNumber',\n        components: [{\n          type: 'text',\n          content: '{count}'\n        }]\n      }\n    });\n\n    // Counting animation logic\n    let count = 0;\n    const updateCounterText = value => {\n      const countingBlock = editor.getBlockManager().get('CounterNumber');\n      const blockEl = countingBlock.getEl();\n      const textComponent = Array.from(blockEl.childNodes).find(node => node.tagName === 'DIV');\n      textComponent.textContent = value.toString();\n    };\n    const countInterval = setInterval(() => {\n      count++;\n      if (count > 100) {\n        clearInterval(countInterval);\n      }\n      updateCounterText(count);\n    }, 1000);\n    return () => {\n      clearInterval(countInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CounterNumberBlock, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = CounterNumberBlock;\nexport default CounterNumberBlock;\nvar _c;\n$RefreshReg$(_c, \"CounterNumberBlock\");","map":{"version":3,"names":["React","useEffect","useRef","grapesjs","CounterNumberComponent","jsxDEV","_jsxDEV","CounterNumberBlock","_s","editorRef","editor","init","container","current","DomComponents","addType","model","defaults","type","count","view","Blocks","add","label","attributes","class","content","components","updateCounterText","value","countingBlock","getBlockManager","get","blockEl","getEl","textComponent","Array","from","childNodes","find","node","tagName","textContent","toString","countInterval","setInterval","clearInterval","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/user/grapesjs-editor/src/CounterNumberBlock.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport grapesjs from 'grapesjs';\nimport CounterNumberComponent from './CounterNumberComponent';\n\nconst CounterNumberBlock = () => {\n  const editorRef = useRef(null);\n\n  useEffect(() => {\n    const editor = grapesjs.init({\n      container: editorRef.current,\n      // ... other GrapesJS options ...\n    });\n\n    editor.DomComponents.addType('CounterNumber', {\n      model: {\n        defaults: {\n          type: 'CounterNumber',\n          count: 0,\n        },\n      },\n      view: CounterNumberComponent,\n    });\n\n    editor.Blocks.add('CounterNumber', {\n      label: 'Number Counter',\n      attributes: { class: 'fa fa-clock-o' },\n      content: {\n        type: 'CounterNumber',\n        components: [\n          {\n            type: 'text',\n            content: '{count}',\n          },\n        ],\n      },\n    });\n\n    // Counting animation logic\n    let count = 0;\n\n    const updateCounterText = (value) => {\n      const countingBlock = editor.getBlockManager().get('CounterNumber');\n      const blockEl = countingBlock.getEl();\n      const textComponent = Array.from(blockEl.childNodes).find(\n        (node) => node.tagName === 'DIV'\n      );\n      textComponent.textContent = value.toString();\n    };\n\n    const countInterval = setInterval(() => {\n      count++;\n      if (count > 100) {\n        clearInterval(countInterval);\n      }\n      updateCounterText(count);\n    }, 1000);\n\n    return () => {\n      clearInterval(countInterval);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div ref={editorRef}></div>\n    </div>\n  );\n};\n\nexport default CounterNumberBlock;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,sBAAsB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGP,QAAQ,CAACQ,IAAI,CAAC;MAC3BC,SAAS,EAAEH,SAAS,CAACI;MACrB;IACF,CAAC,CAAC;;IAEFH,MAAM,CAACI,aAAa,CAACC,OAAO,CAAC,eAAe,EAAE;MAC5CC,KAAK,EAAE;QACLC,QAAQ,EAAE;UACRC,IAAI,EAAE,eAAe;UACrBC,KAAK,EAAE;QACT;MACF,CAAC;MACDC,IAAI,EAAEhB;IACR,CAAC,CAAC;IAEFM,MAAM,CAACW,MAAM,CAACC,GAAG,CAAC,eAAe,EAAE;MACjCC,KAAK,EAAE,gBAAgB;MACvBC,UAAU,EAAE;QAAEC,KAAK,EAAE;MAAgB,CAAC;MACtCC,OAAO,EAAE;QACPR,IAAI,EAAE,eAAe;QACrBS,UAAU,EAAE,CACV;UACET,IAAI,EAAE,MAAM;UACZQ,OAAO,EAAE;QACX,CAAC;MAEL;IACF,CAAC,CAAC;;IAEF;IACA,IAAIP,KAAK,GAAG,CAAC;IAEb,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;MACnC,MAAMC,aAAa,GAAGpB,MAAM,CAACqB,eAAe,CAAC,CAAC,CAACC,GAAG,CAAC,eAAe,CAAC;MACnE,MAAMC,OAAO,GAAGH,aAAa,CAACI,KAAK,CAAC,CAAC;MACrC,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACJ,OAAO,CAACK,UAAU,CAAC,CAACC,IAAI,CACtDC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAK,KAC7B,CAAC;MACDN,aAAa,CAACO,WAAW,GAAGb,KAAK,CAACc,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,MAAMC,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtC1B,KAAK,EAAE;MACP,IAAIA,KAAK,GAAG,GAAG,EAAE;QACf2B,aAAa,CAACF,aAAa,CAAC;MAC9B;MACAhB,iBAAiB,CAACT,KAAK,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACX2B,aAAa,CAACF,aAAa,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtC,OAAA;IAAAyC,QAAA,eACEzC,OAAA;MAAK0C,GAAG,EAAEvC;IAAU;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA/DID,kBAAkB;AAAA8C,EAAA,GAAlB9C,kBAAkB;AAiExB,eAAeA,kBAAkB;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}